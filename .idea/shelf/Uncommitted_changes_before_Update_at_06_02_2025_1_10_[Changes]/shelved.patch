Index: java-filmorate/src/main/java/ru/yandex/practicum/filmorate/controller/UserController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.yandex.practicum.filmorate.controller;\r\n\r\nimport jakarta.validation.Valid;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.springframework.validation.annotation.Validated;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport ru.yandex.practicum.filmorate.exception.ConditionsNotMetException;\r\nimport ru.yandex.practicum.filmorate.exception.DuplicatedDataException;\r\nimport ru.yandex.practicum.filmorate.exception.NotFoundException;\r\nimport ru.yandex.practicum.filmorate.model.User;\r\n\r\nimport java.time.Instant;\r\nimport java.util.Collection;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\n@Slf4j\r\n@Validated\r\n@RestController\r\n@RequestMapping(\"/users\")\r\npublic class UserController {\r\n\r\n    private final Map<Long, User> users = new HashMap<>();\r\n\r\n    @GetMapping\r\n    public Collection<User> findAll() {\r\n        log.info(\"GET запрос на получение всех пользователей\");\r\n        return users.values();\r\n    }\r\n\r\n    @PostMapping\r\n    public User create(@Valid @RequestBody User user) {\r\n        log.info(\"POST - запрос на создание пользователя {} с id: {}\", user, user.getId());\r\n        validateUser(user);\r\n        if (users.values().stream().anyMatch(u -> u.getEmail().equalsIgnoreCase(user.getEmail()))) {\r\n            throw new DuplicatedDataException(\"Этот имейл уже используется\");\r\n        }\r\n        user.setId(getNextId());\r\n        users.put(user.getId(), user);\r\n        return user;\r\n    }\r\n\r\n    @PutMapping(\"/{id}\")\r\n    public User update(@Valid @RequestBody User newUser) {\r\n        log.info(\"PUT - запрос на обновление пользователя {} c id: {}\", newUser, newUser.getId());\r\n        // Проверяем, указан ли ID\r\n        if (newUser.getId() == null) {\r\n            throw new ConditionsNotMetException(\"Id должен быть указан\");\r\n        }\r\n\r\n        // Проверяем, существует ли пользователь с указанным ID\r\n        if (!users.containsKey(newUser.getId())) {\r\n            throw new NotFoundException(\"Пользователь с id = \" + newUser.getId() + \" не найден\");\r\n        }\r\n\r\n        User oldUser = users.get(newUser.getId());\r\n        validateUser(oldUser);\r\n\r\n        // Обновляем другие поля, если они указаны\r\n        if (newUser.getName() != null) {\r\n            oldUser.setName(newUser.getName());\r\n        }\r\n\r\n        if (newUser.getLogin() != null) {\r\n            oldUser.setLogin(newUser.getLogin());\r\n        }\r\n\r\n        // Возвращаем обновленного пользователя\r\n        return oldUser;\r\n    }\r\n\r\n    private void validateUser(User user) {\r\n        if (!user.getEmail().contains(\"@\")) {\r\n            throw new ConditionsNotMetException(\"Имейл должен быть указан и содержать символ '@'\");\r\n        }\r\n\r\n        if (user.getName() == null || user.getName().isBlank()) {\r\n            user.setName(user.getLogin());\r\n        }\r\n\r\n        if (Instant.now().isBefore(user.getBirthday().toInstant())) {\r\n            throw new ConditionsNotMetException(\"Дата рождения не может быть в будущем\");\r\n        }\r\n\r\n    }\r\n\r\n    // Вспомогательный метод для генерации идентификатора нового пользователя\r\n    private long getNextId() {\r\n        long currentMaxId = users.keySet()\r\n                .stream()\r\n                .mapToLong(id -> id)\r\n                .max()\r\n                .orElse(0);\r\n        return ++currentMaxId;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/java-filmorate/src/main/java/ru/yandex/practicum/filmorate/controller/UserController.java b/java-filmorate/src/main/java/ru/yandex/practicum/filmorate/controller/UserController.java
--- a/java-filmorate/src/main/java/ru/yandex/practicum/filmorate/controller/UserController.java	(revision 0757c1a27b7ca125609bcc9926f1d91e889880bc)
+++ b/java-filmorate/src/main/java/ru/yandex/practicum/filmorate/controller/UserController.java	(date 1738789389016)
@@ -10,6 +10,7 @@
 import ru.yandex.practicum.filmorate.model.User;
 
 import java.time.Instant;
+import java.time.LocalDate;
 import java.util.Collection;
 import java.util.HashMap;
 import java.util.Map;
@@ -44,10 +45,6 @@
     public User update(@Valid @RequestBody User newUser) {
         log.info("PUT - запрос на обновление пользователя {} c id: {}", newUser, newUser.getId());
         // Проверяем, указан ли ID
-        if (newUser.getId() == null) {
-            throw new ConditionsNotMetException("Id должен быть указан");
-        }
-
         // Проверяем, существует ли пользователь с указанным ID
         if (!users.containsKey(newUser.getId())) {
             throw new NotFoundException("Пользователь с id = " + newUser.getId() + " не найден");
@@ -78,7 +75,7 @@
             user.setName(user.getLogin());
         }
 
-        if (Instant.now().isBefore(user.getBirthday().toInstant())) {
+        if (LocalDate.now().isBefore(user.getBirthday())) {
             throw new ConditionsNotMetException("Дата рождения не может быть в будущем");
         }
 
Index: java-filmorate/src/main/java/ru/yandex/practicum/filmorate/model/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.yandex.practicum.filmorate.model;\r\n\r\nimport jakarta.validation.constraints.*;\r\nimport lombok.Data;\r\n\r\nimport java.util.Date;\r\n\r\n@Data\r\npublic class User {\r\n    @PositiveOrZero\r\n    Long id;\r\n    @NotEmpty\r\n    @NotBlank\r\n    @Email\r\n    String email;\r\n\r\n    @NotEmpty\r\n    @NotBlank\r\n    String login;\r\n    String name;\r\n\r\n    @NotEmpty\r\n    @NotBlank\r\n    Date birthday;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/java-filmorate/src/main/java/ru/yandex/practicum/filmorate/model/User.java b/java-filmorate/src/main/java/ru/yandex/practicum/filmorate/model/User.java
--- a/java-filmorate/src/main/java/ru/yandex/practicum/filmorate/model/User.java	(revision 0757c1a27b7ca125609bcc9926f1d91e889880bc)
+++ b/java-filmorate/src/main/java/ru/yandex/practicum/filmorate/model/User.java	(date 1738789389060)
@@ -3,12 +3,13 @@
 import jakarta.validation.constraints.*;
 import lombok.Data;
 
+import java.time.LocalDate;
 import java.util.Date;
 
 @Data
 public class User {
     @PositiveOrZero
-    Long id;
+    private long id;
     @NotEmpty
     @NotBlank
     @Email
@@ -19,7 +20,6 @@
     String login;
     String name;
 
-    @NotEmpty
-    @NotBlank
-    Date birthday;
+    @Past
+    LocalDate birthday;
 }
